//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
    // Function to detect cycle in a directed graph.
    bool solve(int s,vector<int>adj[],vector<int>&vis){
        vis[s]=true;
        
        for(auto &val:adj[s]){
         if(vis[val]==1){
             return true;
         } 
         if(vis[val]==0){
             if(solve(val,adj,vis)){
                 return true;
             }
         }
         
        }
            vis[s]=2;
         return false;
    }
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
         vector<int>vis(V,0);
        for(int i=0;i<V;i++){
            if(!vis[i]){
                  if(solve(i,adj,vis)){
            return true;
          }
        }
            }
      
       
        return false;
    }
};

//{ Driver Code Starts.

int main() {

    int t;
    cin >> t;
    while (t--) {
        int V, E;
        cin >> V >> E;

        vector<int> adj[V];

        for (int i = 0; i < E; i++) {
            int u, v;
            cin >> u >> v;
            adj[u].push_back(v);
        }

        Solution obj;
        cout << obj.isCyclic(V, adj) << "\n";
    }

    return 0;
}

// } Driver Code Ends
