//{ Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function Template for C++

class Solution{
  public:
  int longestCommonSubsequence(string X, string Y, int n, int m, vector<vector<int>>& dp) {
    for (int i = 1; i <= n; ++i) {
        for (int j = 1; j <= m; ++j) {
            if (X[i - 1] == Y[j - 1]) { 
                dp[i][j] = 1 + dp[i - 1][j - 1];
            } else {
                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
            }
        }
    }
    return dp[n][m];
}

 
    int longestPalinSubseq(string A) {
        //code here
           int n = A.length();
    
    string B = A;
    reverse(B.begin(), B.end());
    
    int m = B.length();
    vector<vector<int>> dp(n + 1, vector<int>(m + 1, 0));

    int longestPalindromicSeq = longestCommonSubsequence(A, B, n, m, dp);
    
    return longestPalindromicSeq;
    }
};

//{ Driver Code Starts.

int32_t main()
{
    int t; cin >> t;
    while (t--)
    {
        string s; cin >> s;
        Solution ob;
        cout << ob.longestPalinSubseq(s) << endl;
    
cout << "~" << "\n";
}
}
// Contributed By: Pranay Bansal

// } Driver Code Ends
